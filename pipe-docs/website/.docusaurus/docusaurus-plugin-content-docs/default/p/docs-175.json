{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Introduction","items":[{"type":"link","label":"Tutorial Intro","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Pipe Protocol Overview","href":"/docs/introduction/overview","docId":"introduction/overview","unlisted":false},{"type":"link","label":"The Problem Pipe Solves","href":"/docs/introduction/problem","docId":"introduction/problem","unlisted":false},{"type":"link","label":"How Pipe Solves the Problem","href":"/docs/introduction/solution","docId":"introduction/solution","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Core Concepts","items":[{"type":"link","label":"Terminology","href":"/docs/core-concepts/terminology","docId":"core-concepts/terminology","unlisted":false},{"type":"link","label":"Scopes","href":"/docs/core-concepts/scopes","docId":"core-concepts/scopes","unlisted":false},{"type":"link","label":"PipeRecord","href":"/docs/core-concepts/piperecord","docId":"core-concepts/piperecord","unlisted":false},{"type":"link","label":"PipeBundle","href":"/docs/core-concepts/pipebundle","docId":"core-concepts/pipebundle","unlisted":false},{"type":"link","label":"Encryption and Hidden-from-LLM Data","href":"/docs/core-concepts/encryption","docId":"core-concepts/encryption","unlisted":false},{"type":"link","label":"Inline vs. Referenced Content","href":"/docs/core-concepts/inline-referenced","docId":"core-concepts/inline-referenced","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Usage Examples","items":[{"type":"link","label":"Fetching Data and Schema","href":"/docs/usage-examples/fetch-data","docId":"usage-examples/fetch-data","unlisted":false},{"type":"link","label":"Working with Bundles","href":"/docs/usage-examples/work-bundles","docId":"usage-examples/work-bundles","unlisted":false},{"type":"link","label":"Publishing Hidden Data","href":"/docs/usage-examples/publish-hidden-data","docId":"usage-examples/publish-hidden-data","unlisted":false},{"type":"link","label":"Managing Pinned Content","href":"/docs/usage-examples/pin-unpin","docId":"usage-examples/pin-unpin","unlisted":false},{"type":"link","label":"Replicating Data","href":"/docs/usage-examples/replicate-data","docId":"usage-examples/replicate-data","unlisted":false},{"type":"link","label":"Publishing Data and Schema","href":"/docs/usage-examples/publish-data","docId":"usage-examples/publish-data","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"API Reference","items":[{"type":"link","label":"GET /node-status","href":"/docs/api-reference/node-status","docId":"api-reference/node-status","unlisted":false},{"type":"link","label":"GET /node-info","href":"/docs/api-reference/node-info","docId":"api-reference/node-info","unlisted":false},{"type":"link","label":"GET /storage-metrics","href":"/docs/api-reference/storage-metrics","docId":"api-reference/storage-metrics","unlisted":false},{"type":"link","label":"GET /pinned-cids","href":"/docs/api-reference/pinned-cids","docId":"api-reference/pinned-cids","unlisted":false},{"type":"link","label":"GET /configuration","href":"/docs/api-reference/configuration","docId":"api-reference/configuration","unlisted":false},{"type":"link","label":"GET /fetch","href":"/docs/api-reference/fetch","docId":"api-reference/fetch","unlisted":false},{"type":"link","label":"POST /publish","href":"/docs/api-reference/publish","docId":"api-reference/publish","unlisted":false},{"type":"link","label":"POST /publish-bundle","href":"/docs/api-reference/publish-bundle","docId":"api-reference/publish-bundle","unlisted":false},{"type":"link","label":"POST /pin","href":"/docs/api-reference/pin","docId":"api-reference/pin","unlisted":false},{"type":"link","label":"POST /unpin","href":"/docs/api-reference/unpin","docId":"api-reference/unpin","unlisted":false},{"type":"link","label":"POST /replicate","href":"/docs/api-reference/replicate","docId":"api-reference/replicate","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"api-reference/configuration":{"id":"api-reference/configuration","title":"GET /configuration","description":"Returns the current configuration of a specified IPFS node. This endpoint provides detailed information about node settings, network configuration, and runtime parameters.","sidebar":"docs"},"api-reference/fetch":{"id":"api-reference/fetch","title":"GET /fetch","description":"Fetches a PipeRecord by its CID from a specified scope. This endpoint retrieves both the record metadata and its content, if available.","sidebar":"docs"},"api-reference/node-info":{"id":"api-reference/node-info","title":"GET /node-info","description":"Returns detailed information about a specific IPFS node managed by the Pipe protocol. This endpoint provides configuration and identity information for either the private or public node.","sidebar":"docs"},"api-reference/node-status":{"id":"api-reference/node-status","title":"GET /node-status","description":"Returns the status of the IPFS nodes managed by the Pipe protocol. This endpoint provides information about the availability and health of both private and public nodes.","sidebar":"docs"},"api-reference/pin":{"id":"api-reference/pin","title":"POST /pin","description":"Pins a CID in a specified scope, preventing it from being garbage collected. Pinned content remains available until explicitly unpinned.","sidebar":"docs"},"api-reference/pinned-cids":{"id":"api-reference/pinned-cids","title":"GET /pinned-cids","description":"Returns a list of Content Identifiers (CIDs) that are currently pinned in a specified scope. This endpoint provides information about pinned content and their metadata.","sidebar":"docs"},"api-reference/publish":{"id":"api-reference/publish","title":"POST /publish","description":"Publishes a single PipeRecord to IPFS. This endpoint handles both inline content and referenced data, with support for encryption and access control.","sidebar":"docs"},"api-reference/publish-bundle":{"id":"api-reference/publish-bundle","title":"POST /publish-bundle","description":"Publishes a PipeBundle containing both schema and data records. This endpoint handles the creation and storage of related schema and data content as a single unit.","sidebar":"docs"},"api-reference/replicate":{"id":"api-reference/replicate","title":"POST /replicate","description":"Replicates content from one scope to another. This endpoint is primarily used to move content between private and public scopes, enabling controlled sharing of data.","sidebar":"docs"},"api-reference/storage-metrics":{"id":"api-reference/storage-metrics","title":"GET /storage-metrics","description":"Returns storage usage metrics for a specified IPFS node. This endpoint provides detailed information about storage consumption, including repository size, content distribution, and pinned data metrics.","sidebar":"docs"},"api-reference/unpin":{"id":"api-reference/unpin","title":"POST /unpin","description":"Unpins a CID from a specified scope, allowing it to be garbage collected if no other pins exist. This endpoint is used to manage storage by removing pins from content that is no longer needed.","sidebar":"docs"},"core-concepts/encryption":{"id":"core-concepts/encryption","title":"Encryption and Hidden-from-LLM Data","description":"The Pipe protocol provides robust encryption capabilities, allowing data to be securely stored and optionally hidden from LLMs. This document explains the encryption features and how to use them effectively.","sidebar":"docs"},"core-concepts/inline-referenced":{"id":"core-concepts/inline-referenced","title":"Inline vs. Referenced Content","description":"The Pipe protocol supports two methods of storing content: inline and referenced. Each approach has its own advantages and use cases.","sidebar":"docs"},"core-concepts/pipebundle":{"id":"core-concepts/pipebundle","title":"PipeBundle","description":"A PipeBundle combines a schema and data record, providing a way to package related schema and data together. This is particularly useful when a piece of data has a defined schema that describes its structure.","sidebar":"docs"},"core-concepts/piperecord":{"id":"core-concepts/piperecord","title":"PipeRecord","description":"A PipeRecord is the fundamental data structure in the Pipe protocol. It represents a single piece of content—either data or schema—that can be referenced by a CID or optionally stored inline.","sidebar":"docs"},"core-concepts/scopes":{"id":"core-concepts/scopes","title":"Scopes","description":"In the Pipe protocol, scopes determine how and where data is stored and accessed. Each scope has specific characteristics and use cases.","sidebar":"docs"},"core-concepts/terminology":{"id":"core-concepts/terminology","title":"Terminology","description":"This section defines key terms used throughout the Pipe protocol documentation.","sidebar":"docs"},"intro":{"id":"intro","title":"Tutorial Intro","description":"Let's discover Docusaurus in less than 5 minutes.","sidebar":"docs"},"introduction/overview":{"id":"introduction/overview","title":"Pipe Protocol Overview","description":"Pipe is a protocol designed for efficient data handling in multi-agent Large Language Model (LLM) systems. It allows agents to share and reference large or structured data through IPFS (InterPlanetary File System), minimizing context overload and improving scalability.","sidebar":"docs"},"introduction/problem":{"id":"introduction/problem","title":"The Problem Pipe Solves","description":"In multi-agent LLM systems, agents often exchange state by directly passing large data inline. This approach leads to several critical issues:","sidebar":"docs"},"introduction/solution":{"id":"introduction/solution","title":"How Pipe Solves the Problem","description":"Pipe provides a comprehensive solution to the challenges of data handling in multi-agent LLM systems through several key mechanisms:","sidebar":"docs"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template."},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed..."},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack)."},"tutorial-basics/markdown-features":{"id":"tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features."},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs."},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let's translate docs/intro.md to French."},"usage-examples/fetch-data":{"id":"usage-examples/fetch-data","title":"Fetching Data and Schema","description":"This guide demonstrates how to fetch data and schema records using the Pipe protocol. We'll cover various scenarios including inline content, referenced content, and encrypted data.","sidebar":"docs"},"usage-examples/pin-unpin":{"id":"usage-examples/pin-unpin","title":"Managing Pinned Content","description":"This guide demonstrates how to manage pinned content in the Pipe protocol. We'll cover pinning, unpinning, and various strategies for content retention.","sidebar":"docs"},"usage-examples/publish-data":{"id":"usage-examples/publish-data","title":"Publishing Data and Schema","description":"This guide demonstrates how to publish data and schema records using the Pipe protocol.","sidebar":"docs"},"usage-examples/publish-hidden-data":{"id":"usage-examples/publish-hidden-data","title":"Publishing Hidden Data","description":"This guide demonstrates how to publish data that should be hidden from Large Language Models (LLMs) using the Pipe protocol. We'll cover various scenarios including encryption, access policies, and tool-specific access.","sidebar":"docs"},"usage-examples/replicate-data":{"id":"usage-examples/replicate-data","title":"Replicating Data","description":"This guide demonstrates how to replicate data between different scopes in the Pipe protocol. We'll cover various replication scenarios and best practices for data distribution.","sidebar":"docs"},"usage-examples/work-bundles":{"id":"usage-examples/work-bundles","title":"Working with Bundles","description":"This guide demonstrates how to work with PipeBundle objects in the Pipe protocol. We'll cover creating, publishing, and fetching bundles that combine schema and data records.","sidebar":"docs"}}}}